diff --git a/crypto/ec/curve25519.c b/crypto/ec/curve25519.c
index 286d6bff80..1209be8180 100644
--- a/crypto/ec/curve25519.c
+++ b/crypto/ec/curve25519.c
@@ -5439,6 +5439,7 @@ ossl_ed25519_sign(uint8_t *out_sig, const uint8_t *message, size_t message_len,
                   const uint8_t public_key[32], const uint8_t private_key[32],
                   OSSL_LIB_CTX *libctx, const char *propq)
 {
+    puts("\e[36m[OSSL] {crypto/ec/curve25519.c:ossl_ed25519_sign()}: Start sign\e[39m");
     uint8_t az[SHA512_DIGEST_LENGTH];
     uint8_t nonce[SHA512_DIGEST_LENGTH];
     ge_p3 R;
@@ -5451,6 +5452,7 @@ ossl_ed25519_sign(uint8_t *out_sig, const uint8_t *message, size_t message_len,
     if (sha512 == NULL || hash_ctx == NULL)
         goto err;
 
+    // Compute az from private key
     if (!EVP_DigestInit_ex(hash_ctx, sha512, NULL)
         || !EVP_DigestUpdate(hash_ctx, private_key, 32)
         || !EVP_DigestFinal_ex(hash_ctx, az, &sz))
@@ -5460,23 +5462,32 @@ ossl_ed25519_sign(uint8_t *out_sig, const uint8_t *message, size_t message_len,
     az[31] &= 63;
     az[31] |= 64;
 
+    // Step 1: r = H(h_b, ... h_{2b-1}, M)
     if (!EVP_DigestInit_ex(hash_ctx, sha512, NULL)
         || !EVP_DigestUpdate(hash_ctx, az + 32, 32)
-        || !EVP_DigestUpdate(hash_ctx, message, message_len)
+        || !EVP_DigestUpdate(hash_ctx, message, message_len) // First read of message
         || !EVP_DigestFinal_ex(hash_ctx, nonce, &sz))
         goto err;
 
+    // Step 2: R = rB
     x25519_sc_reduce(nonce);
     ge_scalarmult_base(&R, nonce);
     ge_p3_tobytes(out_sig, &R);
 
+    // TODO: Change message (simulate precise rowhammer attack)
+    puts("\e[36m[OSSL] {crypto/ec/curve25519.c:ossl_ed25519_sign()}: Call attack\e[39m");
+    #include "../../../rowhammer_sim.h"
+    rowhammer_sim_attack(message, message_len);
+
+    // Step 3.1: hram = H(R, A, M)
     if (!EVP_DigestInit_ex(hash_ctx, sha512, NULL)
         || !EVP_DigestUpdate(hash_ctx, out_sig, 32)
         || !EVP_DigestUpdate(hash_ctx, public_key, 32)
-        || !EVP_DigestUpdate(hash_ctx, message, message_len)
+        || !EVP_DigestUpdate(hash_ctx, message, message_len) // Second read of message
         || !EVP_DigestFinal_ex(hash_ctx, hram, &sz))
         goto err;
 
+    // Step 3.2: s = r + hram*a
     x25519_sc_reduce(hram);
     sc_muladd(out_sig + 32, hram, az, nonce);
 
